% Get input from user
binary_data = input('Enter a binary sequence (e.g., [1 0 1 1 0]): ');

% Validate input
if ~all(ismember(binary_data, [0 1]))
    error('Input must be a binary sequence containing only 0s and 1s.');
end

% BPSK Mapping
bpsk_symbols = 2 * binary_data - 1;

% Display the results
disp('BPSK Symbols:');
disp(bpsk_symbols);

% Visual Representation

% Plot the original binary sequence
figure;
subplot(3, 1, 1);
stem(binary_data, 'LineWidth', 1.5, 'Marker', 'o');
xlabel('Bit Index');
ylabel('Binary Value');
title('Original Binary Sequence');
grid on;
ylim([-0.5 1.5]);

% Plot the BPSK symbols
subplot(3, 1, 2);
stem(bpsk_symbols, 'LineWidth', 1.5, 'Marker', 'o', 'Color', 'r');
xlabel('Bit Index');
ylabel('BPSK Symbol');
title('BPSK Mapped Symbols');
grid on;
ylim([-1.5 1.5]);

% Parameters for BPSK modulation (for visualization)
Fs = 1000; % Sampling frequency (Hz)
Ts = 1/Fs; % Sampling period (s)
f_carrier = 100; % Carrier frequency (Hz)
T_symbol = 1; % Symbol duration (s)
t = 0:Ts:T_symbol-Ts; % Time vector for one symbol

% Modulate the entire binary sequence
bpsk_signal = [];
for i = 1:length(bpsk_symbols)
    carrier = cos(2*pi*f_carrier*t); % Generate carrier signal
    modulated_symbol = bpsk_symbols(i) * carrier; % BPSK modulation
    bpsk_signal = [bpsk_signal modulated_symbol]; % Append the modulated symbol to the signal
end

% Plot the BPSK modulated signal
subplot(3, 1, 3);
plot(0:Ts:Ts*length(bpsk_signal)-Ts, bpsk_signal, 'LineWidth', 1.5);
xlabel('Time (s)');
ylabel('Amplitude');
title('BPSK Modulated Signal');
grid on;
